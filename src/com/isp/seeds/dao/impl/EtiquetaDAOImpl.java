package com.isp.seeds.dao.impl;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;

import com.isp.seeds.Exceptions.DataException;
import com.isp.seeds.dao.spi.EtiquetaDAO;
import com.isp.seeds.dao.utils.ConnectionManager;
import com.isp.seeds.dao.utils.JDBCUtils;
import com.isp.seeds.model.Etiqueta;

public class EtiquetaDAOImpl implements EtiquetaDAO {

	private Etiqueta loadNext (ResultSet resultSet)
			throws Exception {

		Etiqueta e = new Etiqueta();
		int i=1;

		String nombre = resultSet.getString(i++);

		e = new Etiqueta();

		e.setNombreEtiqueta(nombre);

		return e;		
	}

	@Override
	public Etiqueta findById(Long id) throws Exception {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public List<Etiqueta> findAll() throws Exception {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Etiqueta create(Etiqueta e)
			throws Exception {
		Connection connection = null; 
		PreparedStatement preparedStatement = null;
		ResultSet resultSet = null;

		try {
			connection = ConnectionManager.getConnection();

			String queryString = "INSERT INTO ETIQUETA (NOMBRE_ETIQUETA) "
					+ "VALUES (?)";

			preparedStatement = connection.prepareStatement(queryString);

			/**/
			int i = 1;     			
			preparedStatement.setString(i++, e.getNombreEtiqueta());
			/**/

			int insertedRows = preparedStatement.executeUpdate();

			if (insertedRows == 0) {
				throw new SQLException("Can not add row to table 'Etiqueta'");
			}

			resultSet = preparedStatement.getGeneratedKeys();

			if (resultSet.next()) {
				Long id = resultSet.getLong(1);
				e.setIdEtiqueta(id);				
			} else {
				throw new DataException("Unable to fetch autogenerated primary key");
			}

			return e;					

		} catch (SQLException ex) {
			throw new DataException(ex);
		} finally {
			JDBCUtils.closeResultSet(resultSet);
			JDBCUtils.closeStatement(preparedStatement);			
			JDBCUtils.closeConnection(connection);
		}

	}

}
