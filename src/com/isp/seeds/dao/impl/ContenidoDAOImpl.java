package com.isp.seeds.dao.impl;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.List;

import com.isp.seeds.Exceptions.DataException;
import com.isp.seeds.dao.utils.ContenidoDAO;
import com.isp.seeds.dao.utils.JDBCUtils;
import com.isp.seeds.model.Contenido;

public class ContenidoDAOImpl implements ContenidoDAO {
	
	
	
	

	@Override
	public Contenido findById(Long id) throws Exception {
		// TODO Auto-generated method stub
		return null;
	}



	@Override
	public List<Contenido> findAll(Connection connection) throws Exception {
		// TODO Auto-generated method stub
		return null;
	}



	@Override
	public List<Contenido> findByCriteria(Connection connection, Contenido criteria) throws Exception {
		// TODO Auto-generated method stub
		return null;
	}



	@Override
	public Contenido create(Connection connection, Contenido c) throws Exception {


		PreparedStatement preparedStatement = null;
		ResultSet resultSet = null;
		try {          
			
//			private Long id = null; 
//			private String nombre = null; 
//			// private String descripcion = null; SIN TABLA EN DB
//			private Date fechaAlta = null;fecha_alta
//			private Date fechaMod = null; fecha_mod
//			private Long autor = null; autor_id_cont

			// Creamos el preparedstatement
			String queryString = "INSERT INTO contenido (nombre, fecha_alta, fecha_mod, autor_id_cont) "
					+ "VALUES (?, ?, ?, ?)";

			preparedStatement = connection.prepareStatement(queryString,
									Statement.RETURN_GENERATED_KEYS);

			// Rellenamos el "preparedStatement"
			int i = 1;
			preparedStatement.setString(i++, c.getNombre());
			preparedStatement.setDate(i++, new java.sql.Date(c.getFechaAlta().getTime()));
			preparedStatement.setDate(i++, new java.sql.Date(c.getFechaMod().getTime()));
			preparedStatement.setLong(i++, c.getIdAutor());

			
			// Execute query
			int insertedRows = preparedStatement.executeUpdate();

			if (insertedRows == 0) {
				throw new SQLException("Can not add row to table 'Usuario'");
			}

			// Recuperamos la PK generada
			resultSet = preparedStatement.getGeneratedKeys();
			if (resultSet.next()) {
				Long pk = resultSet.getLong(1); 
				c.setIdContenido(pk);
			} else {
				throw new DataException("Unable to fetch autogenerated primary key");
			}

			// Return the DTO
			return c;

		} catch (SQLException e) {
			throw new DataException(e);
		} finally {
			JDBCUtils.closeResultSet(resultSet);
			JDBCUtils.closeStatement(preparedStatement);
		}
	}



}


